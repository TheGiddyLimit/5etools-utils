{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "items-base.json",
	"version": "1.6.14",
	"type": "object",

	"$defs": {
		"itemLookupBase": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"source": {"$ref": "util.json#/$defs/source"},
				"page": {"$ref": "util.json#/$defs/page"},
				"$$ifSite": {
					"srd": {"$ref": "util.json#/$defs/srd"},
					"srd52": {"$ref": "util.json#/$defs/srd"},
					"basicRules": {"$ref": "util.json#/$defs/basicRules"},
					"basicRules2024": {"$ref": "util.json#/$defs/basicRules"}
				},
				"reprintedAs": {"$ref": "util.json#/$defs/reprintedAs"},
				"name": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"itemPropertyLookup": {
			"anyOf": [
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemLookupBase"
						},
						{
							"properties": {
								"template": {
									"type": "string"
								},
								"entries": {
									"type": "array",
									"items": {
										"$ref": "entry.json"
									}
								}
							}
						},
						{
							"$ref": "#/$defs/itemTypeData_requirements"
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemLookupBase"
						},
						{
							"properties": {
								"template": {
									"type": "string"
								},
								"entriesTemplate": {
									"type": "array",
									"items": {
										"$ref": "entry.json"
									}
								}
							}
						},
						{
							"$ref": "#/$defs/itemTypeData_requirements"
						}
					]
				}
			]
		},

		"baseitemData": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"alias": {"$ref": "util.json#/$defs/alias"},
				"group": {"$ref": "util.json#/$defs/group"},
				"edition": {"$ref": "util-edition.json#/$defs/edition"},
				"type": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"typeAlt": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"rarity": {"$ref": "items-shared.json#/$defs/itemRarity"},
				"source": {"$ref": "util.json#/$defs/source"},
				"page": {"$ref": "util.json#/$defs/page"},
				"reprintedAs": {"$ref": "util.json#/$defs/reprintedAs"},
				"ac": {
					"type": "integer"
				},
				"age": {
					"$ref": "items-shared.json#/$defs/itemAge"
				},
				"bonusAc": {"type": "string"},
				"bonusWeapon": {"type": "string"},
				"bonusWeaponAttack": {"type": "string"},
				"bonusWeaponDamage": {"type": "string"},
				"bonusWeaponCritDamage": {"type": "string"},
				"bonusSpellAttack": {"type": "string"},
				"bonusSpellDamage": {"type": "string"},
				"bonusSpellSaveDc": {"type": "string"},
				"bonusSavingThrow": {"type": "string"},
				"bonusAbilityCheck": {"type": "string"},
				"bonusProficiencyBonus": {"type": "string"},
				"bonusSavingThrowConcentration": {"type": "string"},
				"dmg1": {
					"type": "string"
				},
				"dmg2": {
					"type": "string"
				},
				"dmgType": {
					"$ref": "util.json#/$defs/dataDamageTags"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"property": {
					"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
				},
				"range": {
					"type": "string"
				},
				"reload": {
					"type": "integer"
				},
				"scfType": {
					"$ref": "items-shared.json#/$defs/itemScfType"
				},
				"vulnerable": {
					"$ref": "util.json#/$defs/damageVulnerabilityArray"
				},
				"resist": {
					"$ref": "util.json#/$defs/damageResistArray"
				},
				"immune": {
					"$ref": "util.json#/$defs/damageImmunityArray"
				},
				"conditionImmune": {
					"$ref": "util.json#/$defs/conditionImmunityArray"
				},
				"stealth": {
					"type": "boolean"
				},
				"strength": {
					"type": "string"
				},
				"dexterityMax": {"$ref": "items-shared.json#/$defs/itemDexterityMax"},

				"armor": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"axe": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"sword": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"mace": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"spear": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"hammer": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"bow": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"crossbow": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"club": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"dagger": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"net": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"polearm": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"lance": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"rapier": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"whip": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"halberd": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"glaive": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"arrow": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"bolt": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"bulletFirearm": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"bulletSling": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"cellEnergy": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"needleBlowgun": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},
				"weapon": {
					"description": "Flag used when merging generic variants",
					"type": "boolean"
				},

				"firearm": {
					"type": "boolean"
				},
				"staff": {
					"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
					"type": "boolean"
				},
				"value": {
					"description": "In copper pieces.",
					"type": "number"
				},
				"carryingCapacity": {
					"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
				},
				"speed": {
					"$ref": "items-shared.json#/$defs/itemSpeed"
				},

				"charges": {
					"type": ["string", "integer"]
				},
				"recharge": {
					"$ref": "items-shared.json#/$defs/itemRecharge"
				},
				"rechargeAmount": {
					"$ref": "items-shared.json#/$defs/itemRechargeAmount"
				},

				"$$if": {
					"modes": ["brew", "ua"],
					"value": {
						"customProperties": {"$ref": "items-shared.json#/$defs/customProperties"}
					}
				},
				"$$ifBrew": {
					"acSpecial": {"$ref": "items-shared.json#/$defs/itemAcSpecial"},
					"currencyConversion": {
						"description": "ID of a value conversion table. Homebrew only.",
						"type": "string"
					},
					"foundryType":{
						"description": "Homebrew only: used to manually specify the exact Foundry item type an item should be imported as.\n\n\"CONFIG.Item.typeLabels\" correct as of Foundry v0.8.9",
						"type": "string",
						"enum": ["weapon", "equipment", "consumable", "tool", "loot", "class", "spell", "feat", "backpack"]
					},
					"foundrySystem": {"$ref": "util-foundry.json#/$defs/foundrySystemObject"},
					"foundryActivities": {"$ref": "util-foundry.json#/$defs/foundryActivitiesArray"},
					"foundryFlags": {"$ref": "util-foundry.json#/$defs/foundryFlagsObject"},
					"foundryEffects": {"$ref": "util-foundry.json#/$defs/foundryEffectsArray"},
					"foundryImg": {"$ref": "util-foundry.json#/$defs/foundryImg"},
					"fluff": {
						"$ref": "items-shared.json#/$defs/fluff"
					}
				},
				"valueMult": {"type": "number"},
				"valueRarity": {"$ref": "items-shared.json#/$defs/itemRarity"},
				"weaponCategory": {
					"$ref": "items-shared.json#/$defs/itemWeaponCategory"
				},
				"weight": {
					"type": "number"
				},
				"weightMult": {
					"type": "number"
				},
				"quantity": {
					"type": "integer"
				},
				"$$ifSite": {
					"srd": {"$ref": "util.json#/$defs/srd"},
					"srd52": {"$ref": "util.json#/$defs/srd"},
					"basicRules": {"$ref": "util.json#/$defs/basicRules"},
					"basicRules2024": {"$ref": "util.json#/$defs/basicRules"}
				},
				"legacy": {"$ref": "util.json#/$defs/legacy"},
				"otherSources": {
					"$ref": "util.json#/$defs/otherSources"
				},
				"ammoType": {
					"$ref": "items-shared.json#/$defs/itemAmmoType"
				},
				"packContents": {
					"$ref": "items-shared.json#/$defs/packContents"
				},
				"lootTables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"miscTags": {"$ref": "items-shared.json#/$defs/itemMiscTags"},
				"mastery": {"$ref": "items-shared.json#/$defs/itemMastery"},
				"reach": {"$ref": "items-shared.json#/$defs/itemReach"},
				"light": {"$ref": "items-shared.json#/$defs/itemLight"},
				"hasFluff": {"type": "boolean"},
				"hasFluffImages": {"type": "boolean"}
			},
			"additionalProperties": false
		},

		"baseitem": {
			"anyOf": [
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/baseitemData"
						},
						{
							"required": [
								"name",
								"type",
								"rarity",
								"source"
							]
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/baseitemData"
						},
						{
							"$ref": "util-copy.json#/$defs/copyBlockGeneric"
						}
					]
				}
			]
		},

		"copyBlock_copy_itemType": {
			"type": "object",
			"$$merge": [
				{
					"$ref": "util-copy.json#/$defs/copyBlock_copy_base"
				},
				{
					"properties": {
						"abbreviation": {"type": "string"},
						"source": {"$ref": "util.json#/$defs/source"}
					},
					"required": ["abbreviation", "source"]
				}
			]
		},

		"copyBlockItemType": {
			"type": "object",
			"properties": {
				"_copy": {
					"$ref": "#/$defs/copyBlock_copy_itemType"
				}
			},
			"required": [
				"_copy"
			]
		},

		"itemTypeData_entries": {
			"type": "object",
			"$$merge": [
				{
					"$ref": "#/$defs/itemLookupBase"
				},
				{
					"properties": {
						"entries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						}
					}
				}
			]
		},

		"itemTypeData_entriesTemplate": {
			"type": "object",
			"$$merge": [
				{
					"$ref": "#/$defs/itemLookupBase"
				},
				{
					"properties": {
						"entriesTemplate": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						}
					}
				}
			]
		},

		"itemTypeData_requirements": {
			"$$if": {
				"modes": ["site", "ua"],
				"value": {
					"required": [
						"abbreviation",
						"source",
						"page"
					]
				}
			},
			"$$ifBrew": {
				"required": [
					"abbreviation",
					"source"
				]
			}
		},

		"itemType": {
			"anyOf": [
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemTypeData_entries"
						},
						{
							"$ref": "#/$defs/itemTypeData_requirements"
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemTypeData_entries"
						},
						{
							"$ref": "#/$defs/copyBlockItemType"
						}
					]
				},

				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemTypeData_entriesTemplate"
						},
						{
							"$ref": "#/$defs/itemTypeData_requirements"
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/$defs/itemTypeData_entriesTemplate"
						},
						{
							"$ref": "#/$defs/copyBlockItemType"
						}
					]
				}
			]
		}
	},

	"properties": {
		"_meta": {"$ref": "util.json#/$defs/metaBlock"},

		"baseitem": {
			"type": "array",
			"minItems": 1,
			"uniqueItems": true,
			"items": {
				"$ref": "#/$defs/baseitem"
			}
		},
		"itemProperty": {
			"type": "array",
			"minItems": 1,
			"uniqueItems": true,
			"items": {"$ref": "#/$defs/itemPropertyLookup"}
		},
		"itemType": {
			"type": "array",
			"minItems": 1,
			"uniqueItems": true,
			"items": {
				"$ref": "#/$defs/itemType"
			}
		},
		"itemEntry": {
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"properties": {
					"name": {"type": "string"},
					"source": {"$ref": "util.json#/$defs/source"},
					"entriesTemplate": {
						"type": "array",
						"items": {"$ref": "entry.json"}
					}
				}
			}
		},
		"itemTypeAdditionalEntries": {
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"properties": {
					"name": {"type": "string"},
					"source": {"$ref": "util.json#/$defs/source"},
					"appliesTo": {
						"type": "string"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "entry.json"
						}
					}
				},
				"additionalProperties": false
			}
		},
		"itemMastery": {
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"properties": {
					"name": {"type": "string"},
					"source": {"$ref": "util.json#/$defs/source"},
					"page": {"$ref": "util.json#/$defs/page"},
					"$$ifSite": {
						"srd": {"$ref": "util.json#/$defs/srd"},
						"srd52": {"$ref": "util.json#/$defs/srd"},
						"basicRules": {"$ref": "util.json#/$defs/basicRules"},
						"basicRules2024": {"$ref": "util.json#/$defs/basicRules"}
					},
					"prerequisite": {
						"$ref": "util.json#/$defs/prerequisite"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "entry.json"
						}
					}
				},
				"required": [
					"name",
					"source",
					"entries"
				],
				"additionalProperties": false
			}
		}
	},
	"additionalProperties": false
}
