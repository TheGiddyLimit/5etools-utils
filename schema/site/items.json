{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "items.json",
	"version": "1.14.25",
	"type": "object",
	"$defs": {
		"itemData": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"alias": {
					"$ref": "util.json#/$defs/alias"
				},
				"group": {
					"$ref": "util.json#/$defs/group"
				},
				"type": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"typeAlt": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"rarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"source": {
					"$ref": "util.json#/$defs/source"
				},
				"page": {
					"$ref": "util.json#/$defs/page"
				},
				"additionalSources": {
					"$ref": "util.json#/$defs/additionalSources"
				},
				"reprintedAs": {
					"$ref": "util.json#/$defs/reprintedAs"
				},
				"baseItem": {
					"type": "string"
				},
				"ac": {
					"type": "integer"
				},
				"age": {
					"$ref": "items-shared.json#/$defs/itemAge"
				},
				"carryingCapacity": {
					"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
				},
				"dmg1": {
					"type": "string"
				},
				"dmg2": {
					"type": "string",
					"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
					"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
				},
				"dmgType": {
					"$ref": "util.json#/$defs/dataDamageTags"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"additionalEntries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"property": {
					"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
				},
				"range": {
					"type": "string"
				},
				"reload": {
					"type": [
						"string",
						"integer"
					]
				},
				"reqAttune": {
					"type": [
						"string",
						"boolean"
					]
				},
				"reqAttuneAlt": {
					"description": "Used for filtering.",
					"type": [
						"string",
						"boolean"
					],
					"markdownDescription": "Used for filtering."
				},
				"curse": {
					"type": "boolean"
				},
				"vulnerable": {
					"$ref": "util.json#/$defs/damageVulnerabilityArray"
				},
				"resist": {
					"$ref": "util.json#/$defs/damageResistArray"
				},
				"immune": {
					"$ref": "util.json#/$defs/damageImmunityArray"
				},
				"conditionImmune": {
					"$ref": "util.json#/$defs/conditionImmunityArray"
				},
				"detail1": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"detail2": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"scfType": {
					"$ref": "items-shared.json#/$defs/itemScfType"
				},
				"speed": {
					"$ref": "items-shared.json#/$defs/itemSpeed"
				},
				"stealth": {
					"type": "boolean"
				},
				"strength": {
					"type": [
						"string",
						"null"
					]
				},
				"dexterityMax": {
					"$ref": "items-shared.json#/$defs/itemDexterityMax"
				},
				"firearm": {
					"type": "boolean"
				},
				"staff": {
					"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
					"type": "boolean",
					"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
				},
				"tier": {
					"$ref": "items-shared.json#/$defs/itemTier"
				},
				"value": {
					"description": "In copper pieces.",
					"type": [
						"number",
						"null"
					],
					"markdownDescription": "In copper pieces."
				},
				"valueMult": {
					"type": "number"
				},
				"valueRarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"weaponCategory": {
					"$ref": "items-shared.json#/$defs/itemWeaponCategory"
				},
				"weight": {
					"type": "number"
				},
				"weightMult": {
					"type": "number"
				},
				"weightNote": {
					"type": "string"
				},
				"wondrous": {
					"type": "boolean"
				},
				"tattoo": {
					"type": "boolean"
				},
				"sentient": {
					"type": "boolean"
				},
				"poison": {
					"type": "boolean"
				},
				"poisonTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"contact",
							"ingested",
							"injury",
							"inhaled"
						]
					}
				},
				"crew": {
					"type": "integer"
				},
				"crewMin": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"crewMax": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"capPassenger": {
					"type": "integer"
				},
				"capCargo": {
					"type": "number"
				},
				"vehSpeed": {
					"type": "number"
				},
				"vehAc": {
					"type": "integer"
				},
				"vehHp": {
					"type": "integer"
				},
				"vehDmgThresh": {
					"type": "integer"
				},
				"travelCost": {
					"description": "In copper pieces per mile per passenger.",
					"type": "integer",
					"markdownDescription": "In copper pieces per mile per passenger."
				},
				"shippingCost": {
					"description": "In copper pieces per 100 lbs per mile.",
					"type": "integer",
					"markdownDescription": "In copper pieces per 100 lbs per mile."
				},
				"charges": {
					"type": [
						"string",
						"integer"
					]
				},
				"recharge": {
					"$ref": "items-shared.json#/$defs/itemRecharge"
				},
				"rechargeAmount": {
					"$ref": "items-shared.json#/$defs/itemRechargeAmount"
				},
				"optionalfeatures": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"attachedSpells": {
					"$ref": "items-shared.json#/$defs/itemAttachedSpells"
				},
				"ability": {
					"$ref": "items-shared.json#/$defs/itemAbility"
				},
				"focus": {
					"description": "Item can be used as a spellcasting focus",
					"oneOf": [
						{
							"type": "boolean"
						},
						{
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"Artificer",
									"Bard",
									"Cleric",
									"Druid",
									"Paladin",
									"Ranger",
									"Sorcerer",
									"Warlock",
									"Wizard"
								]
							}
						}
					],
					"markdownDescription": "Item can be used as a spellcasting focus"
				},
				"lootTables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"critThreshold": {
					"type": "integer"
				},
				"bonusAc": {
					"type": "string"
				},
				"bonusWeapon": {
					"type": "string"
				},
				"bonusWeaponAttack": {
					"type": "string"
				},
				"bonusWeaponDamage": {
					"type": "string"
				},
				"bonusWeaponCritDamage": {
					"type": "string"
				},
				"bonusSpellAttack": {
					"type": "string"
				},
				"bonusSpellDamage": {
					"type": "string"
				},
				"bonusSpellSaveDc": {
					"type": "string"
				},
				"bonusSavingThrow": {
					"type": "string"
				},
				"bonusAbilityCheck": {
					"type": "string"
				},
				"bonusProficiencyBonus": {
					"type": "string"
				},
				"bonusSavingThrowConcentration": {
					"type": "string"
				},
				"modifySpeed": {
					"$ref": "items-shared.json#/$defs/itemModifySpeed"
				},
				"otherSources": {
					"$ref": "util.json#/$defs/otherSources"
				},
				"legacy": {
					"$ref": "util.json#/$defs/legacy"
				},
				"atomicPackContents": {
					"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
					"type": "boolean",
					"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
				},
				"containerCapacity": {
					"type": "object",
					"properties": {
						"weight": {
							"description": "Value in pounds.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in pounds."
						},
						"volume": {
							"description": "Value in cubic feet.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in cubic feet."
						},
						"item": {
							"type": "array",
							"items": {
								"type": "object",
								"patternProperties": {
									".*": {
										"type": "integer"
									}
								},
								"additionalProperties": false
							}
						},
						"weightless": {
							"description": "If the container renders its contents weightless.",
							"type": "boolean",
							"markdownDescription": "If the container renders its contents weightless."
						}
					},
					"additionalProperties": false
				},
				"ammoType": {
					"$ref": "items-shared.json#/$defs/itemAmmoType"
				},
				"packContents": {
					"$ref": "items-shared.json#/$defs/packContents"
				},
				"grantsProficiency": {
					"type": "boolean"
				},
				"grantsLanguage": {
					"type": "boolean"
				},
				"spellScrollLevel": {
					"type": "integer"
				},
				"seeAlsoDeck": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
						"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
					}
				},
				"seeAlsoVehicle": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
						"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
					}
				},
				"reqAttuneTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"reqAttuneAltTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"miscTags": {
					"$ref": "items-shared.json#/$defs/itemMiscTags"
				},
				"mastery": {
					"$ref": "items-shared.json#/$defs/itemMastery"
				},
				"reach": {
					"$ref": "items-shared.json#/$defs/itemReach"
				},
				"light": {
					"$ref": "items-shared.json#/$defs/itemLight"
				},
				"barDimensions": {
					"type": "object",
					"description": "Values given in inches.",
					"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
					"properties": {
						"l": {
							"type": "number"
						},
						"w": {
							"type": "number"
						},
						"h": {
							"type": "number"
						}
					},
					"required": [
						"l",
						"w",
						"h"
					],
					"additionalProperties": false,
					"markdownDescription": "Values given in inches."
				},
				"hasFluff": {
					"type": "boolean"
				},
				"hasFluffImages": {
					"type": "boolean"
				},
				"hasRefs": {
					"type": "boolean",
					"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
					"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
				},
				"srd": {
					"$ref": "util.json#/$defs/srd"
				},
				"srd52": {
					"$ref": "util.json#/$defs/srd"
				},
				"basicRules": {
					"$ref": "util.json#/$defs/basicRules"
				},
				"basicRules2024": {
					"$ref": "util.json#/$defs/basicRules"
				}
			},
			"additionalProperties": false
		},
		"_itemGroupItems": {
			"type": "array",
			"minItems": 1,
			"uniqueItems": true,
			"items": {
				"type": "string"
			}
		},
		"_item": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"alias": {
					"$ref": "util.json#/$defs/alias"
				},
				"group": {
					"$ref": "util.json#/$defs/group"
				},
				"type": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"typeAlt": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"rarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"source": {
					"$ref": "util.json#/$defs/source"
				},
				"page": {
					"$ref": "util.json#/$defs/page"
				},
				"additionalSources": {
					"$ref": "util.json#/$defs/additionalSources"
				},
				"reprintedAs": {
					"$ref": "util.json#/$defs/reprintedAs"
				},
				"baseItem": {
					"type": "string"
				},
				"ac": {
					"type": "integer"
				},
				"age": {
					"$ref": "items-shared.json#/$defs/itemAge"
				},
				"carryingCapacity": {
					"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
				},
				"dmg1": {
					"type": "string"
				},
				"dmg2": {
					"type": "string",
					"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
					"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
				},
				"dmgType": {
					"$ref": "util.json#/$defs/dataDamageTags"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"additionalEntries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"property": {
					"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
				},
				"range": {
					"type": "string"
				},
				"reload": {
					"type": [
						"string",
						"integer"
					]
				},
				"reqAttune": {
					"type": [
						"string",
						"boolean"
					]
				},
				"reqAttuneAlt": {
					"description": "Used for filtering.",
					"type": [
						"string",
						"boolean"
					],
					"markdownDescription": "Used for filtering."
				},
				"curse": {
					"type": "boolean"
				},
				"vulnerable": {
					"$ref": "util.json#/$defs/damageVulnerabilityArray"
				},
				"resist": {
					"$ref": "util.json#/$defs/damageResistArray"
				},
				"immune": {
					"$ref": "util.json#/$defs/damageImmunityArray"
				},
				"conditionImmune": {
					"$ref": "util.json#/$defs/conditionImmunityArray"
				},
				"detail1": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"detail2": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"scfType": {
					"$ref": "items-shared.json#/$defs/itemScfType"
				},
				"speed": {
					"$ref": "items-shared.json#/$defs/itemSpeed"
				},
				"stealth": {
					"type": "boolean"
				},
				"strength": {
					"type": [
						"string",
						"null"
					]
				},
				"dexterityMax": {
					"$ref": "items-shared.json#/$defs/itemDexterityMax"
				},
				"firearm": {
					"type": "boolean"
				},
				"staff": {
					"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
					"type": "boolean",
					"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
				},
				"tier": {
					"$ref": "items-shared.json#/$defs/itemTier"
				},
				"value": {
					"description": "In copper pieces.",
					"type": [
						"number",
						"null"
					],
					"markdownDescription": "In copper pieces."
				},
				"valueMult": {
					"type": "number"
				},
				"valueRarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"weaponCategory": {
					"$ref": "items-shared.json#/$defs/itemWeaponCategory"
				},
				"weight": {
					"type": "number"
				},
				"weightMult": {
					"type": "number"
				},
				"weightNote": {
					"type": "string"
				},
				"wondrous": {
					"type": "boolean"
				},
				"tattoo": {
					"type": "boolean"
				},
				"sentient": {
					"type": "boolean"
				},
				"poison": {
					"type": "boolean"
				},
				"poisonTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"contact",
							"ingested",
							"injury",
							"inhaled"
						]
					}
				},
				"crew": {
					"type": "integer"
				},
				"crewMin": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"crewMax": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"capPassenger": {
					"type": "integer"
				},
				"capCargo": {
					"type": "number"
				},
				"vehSpeed": {
					"type": "number"
				},
				"vehAc": {
					"type": "integer"
				},
				"vehHp": {
					"type": "integer"
				},
				"vehDmgThresh": {
					"type": "integer"
				},
				"travelCost": {
					"description": "In copper pieces per mile per passenger.",
					"type": "integer",
					"markdownDescription": "In copper pieces per mile per passenger."
				},
				"shippingCost": {
					"description": "In copper pieces per 100 lbs per mile.",
					"type": "integer",
					"markdownDescription": "In copper pieces per 100 lbs per mile."
				},
				"charges": {
					"type": [
						"string",
						"integer"
					]
				},
				"recharge": {
					"$ref": "items-shared.json#/$defs/itemRecharge"
				},
				"rechargeAmount": {
					"$ref": "items-shared.json#/$defs/itemRechargeAmount"
				},
				"optionalfeatures": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"attachedSpells": {
					"$ref": "items-shared.json#/$defs/itemAttachedSpells"
				},
				"ability": {
					"$ref": "items-shared.json#/$defs/itemAbility"
				},
				"focus": {
					"description": "Item can be used as a spellcasting focus",
					"oneOf": [
						{
							"type": "boolean"
						},
						{
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"Artificer",
									"Bard",
									"Cleric",
									"Druid",
									"Paladin",
									"Ranger",
									"Sorcerer",
									"Warlock",
									"Wizard"
								]
							}
						}
					],
					"markdownDescription": "Item can be used as a spellcasting focus"
				},
				"lootTables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"critThreshold": {
					"type": "integer"
				},
				"bonusAc": {
					"type": "string"
				},
				"bonusWeapon": {
					"type": "string"
				},
				"bonusWeaponAttack": {
					"type": "string"
				},
				"bonusWeaponDamage": {
					"type": "string"
				},
				"bonusWeaponCritDamage": {
					"type": "string"
				},
				"bonusSpellAttack": {
					"type": "string"
				},
				"bonusSpellDamage": {
					"type": "string"
				},
				"bonusSpellSaveDc": {
					"type": "string"
				},
				"bonusSavingThrow": {
					"type": "string"
				},
				"bonusAbilityCheck": {
					"type": "string"
				},
				"bonusProficiencyBonus": {
					"type": "string"
				},
				"bonusSavingThrowConcentration": {
					"type": "string"
				},
				"modifySpeed": {
					"$ref": "items-shared.json#/$defs/itemModifySpeed"
				},
				"otherSources": {
					"$ref": "util.json#/$defs/otherSources"
				},
				"legacy": {
					"$ref": "util.json#/$defs/legacy"
				},
				"atomicPackContents": {
					"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
					"type": "boolean",
					"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
				},
				"containerCapacity": {
					"type": "object",
					"properties": {
						"weight": {
							"description": "Value in pounds.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in pounds."
						},
						"volume": {
							"description": "Value in cubic feet.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in cubic feet."
						},
						"item": {
							"type": "array",
							"items": {
								"type": "object",
								"patternProperties": {
									".*": {
										"type": "integer"
									}
								},
								"additionalProperties": false
							}
						},
						"weightless": {
							"description": "If the container renders its contents weightless.",
							"type": "boolean",
							"markdownDescription": "If the container renders its contents weightless."
						}
					},
					"additionalProperties": false
				},
				"ammoType": {
					"$ref": "items-shared.json#/$defs/itemAmmoType"
				},
				"packContents": {
					"$ref": "items-shared.json#/$defs/packContents"
				},
				"grantsProficiency": {
					"type": "boolean"
				},
				"grantsLanguage": {
					"type": "boolean"
				},
				"spellScrollLevel": {
					"type": "integer"
				},
				"seeAlsoDeck": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
						"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
					}
				},
				"seeAlsoVehicle": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
						"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
					}
				},
				"reqAttuneTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"reqAttuneAltTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"miscTags": {
					"$ref": "items-shared.json#/$defs/itemMiscTags"
				},
				"mastery": {
					"$ref": "items-shared.json#/$defs/itemMastery"
				},
				"reach": {
					"$ref": "items-shared.json#/$defs/itemReach"
				},
				"light": {
					"$ref": "items-shared.json#/$defs/itemLight"
				},
				"barDimensions": {
					"type": "object",
					"description": "Values given in inches.",
					"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
					"properties": {
						"l": {
							"type": "number"
						},
						"w": {
							"type": "number"
						},
						"h": {
							"type": "number"
						}
					},
					"required": [
						"l",
						"w",
						"h"
					],
					"additionalProperties": false,
					"markdownDescription": "Values given in inches."
				},
				"hasFluff": {
					"type": "boolean"
				},
				"hasFluffImages": {
					"type": "boolean"
				},
				"hasRefs": {
					"type": "boolean",
					"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
					"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
				},
				"srd": {
					"$ref": "util.json#/$defs/srd"
				},
				"srd52": {
					"$ref": "util.json#/$defs/srd"
				},
				"basicRules": {
					"$ref": "util.json#/$defs/basicRules"
				},
				"basicRules2024": {
					"$ref": "util.json#/$defs/basicRules"
				}
			},
			"additionalProperties": false,
			"required": [
				"name",
				"rarity",
				"source"
			]
		},
		"item": {
			"anyOf": [
				{
					"$ref": "#/$defs/_item"
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"alias": {
							"$ref": "util.json#/$defs/alias"
						},
						"group": {
							"$ref": "util.json#/$defs/group"
						},
						"type": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"typeAlt": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"rarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"source": {
							"$ref": "util.json#/$defs/source"
						},
						"page": {
							"$ref": "util.json#/$defs/page"
						},
						"additionalSources": {
							"$ref": "util.json#/$defs/additionalSources"
						},
						"reprintedAs": {
							"$ref": "util.json#/$defs/reprintedAs"
						},
						"baseItem": {
							"type": "string"
						},
						"ac": {
							"type": "integer"
						},
						"age": {
							"$ref": "items-shared.json#/$defs/itemAge"
						},
						"carryingCapacity": {
							"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
						},
						"dmg1": {
							"type": "string"
						},
						"dmg2": {
							"type": "string",
							"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
							"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
						},
						"dmgType": {
							"$ref": "util.json#/$defs/dataDamageTags"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"additionalEntries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"property": {
							"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
						},
						"range": {
							"type": "string"
						},
						"reload": {
							"type": [
								"string",
								"integer"
							]
						},
						"reqAttune": {
							"type": [
								"string",
								"boolean"
							]
						},
						"reqAttuneAlt": {
							"description": "Used for filtering.",
							"type": [
								"string",
								"boolean"
							],
							"markdownDescription": "Used for filtering."
						},
						"curse": {
							"type": "boolean"
						},
						"vulnerable": {
							"$ref": "util.json#/$defs/damageVulnerabilityArray"
						},
						"resist": {
							"$ref": "util.json#/$defs/damageResistArray"
						},
						"immune": {
							"$ref": "util.json#/$defs/damageImmunityArray"
						},
						"conditionImmune": {
							"$ref": "util.json#/$defs/conditionImmunityArray"
						},
						"detail1": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"detail2": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"scfType": {
							"$ref": "items-shared.json#/$defs/itemScfType"
						},
						"speed": {
							"$ref": "items-shared.json#/$defs/itemSpeed"
						},
						"stealth": {
							"type": "boolean"
						},
						"strength": {
							"type": [
								"string",
								"null"
							]
						},
						"dexterityMax": {
							"$ref": "items-shared.json#/$defs/itemDexterityMax"
						},
						"firearm": {
							"type": "boolean"
						},
						"staff": {
							"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
							"type": "boolean",
							"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
						},
						"tier": {
							"$ref": "items-shared.json#/$defs/itemTier"
						},
						"value": {
							"description": "In copper pieces.",
							"type": [
								"number",
								"null"
							],
							"markdownDescription": "In copper pieces."
						},
						"valueMult": {
							"type": "number"
						},
						"valueRarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"weaponCategory": {
							"$ref": "items-shared.json#/$defs/itemWeaponCategory"
						},
						"weight": {
							"type": "number"
						},
						"weightMult": {
							"type": "number"
						},
						"weightNote": {
							"type": "string"
						},
						"wondrous": {
							"type": "boolean"
						},
						"tattoo": {
							"type": "boolean"
						},
						"sentient": {
							"type": "boolean"
						},
						"poison": {
							"type": "boolean"
						},
						"poisonTypes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"contact",
									"ingested",
									"injury",
									"inhaled"
								]
							}
						},
						"crew": {
							"type": "integer"
						},
						"crewMin": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"crewMax": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"capPassenger": {
							"type": "integer"
						},
						"capCargo": {
							"type": "number"
						},
						"vehSpeed": {
							"type": "number"
						},
						"vehAc": {
							"type": "integer"
						},
						"vehHp": {
							"type": "integer"
						},
						"vehDmgThresh": {
							"type": "integer"
						},
						"travelCost": {
							"description": "In copper pieces per mile per passenger.",
							"type": "integer",
							"markdownDescription": "In copper pieces per mile per passenger."
						},
						"shippingCost": {
							"description": "In copper pieces per 100 lbs per mile.",
							"type": "integer",
							"markdownDescription": "In copper pieces per 100 lbs per mile."
						},
						"charges": {
							"type": [
								"string",
								"integer"
							]
						},
						"recharge": {
							"$ref": "items-shared.json#/$defs/itemRecharge"
						},
						"rechargeAmount": {
							"$ref": "items-shared.json#/$defs/itemRechargeAmount"
						},
						"optionalfeatures": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"attachedSpells": {
							"$ref": "items-shared.json#/$defs/itemAttachedSpells"
						},
						"ability": {
							"$ref": "items-shared.json#/$defs/itemAbility"
						},
						"focus": {
							"description": "Item can be used as a spellcasting focus",
							"oneOf": [
								{
									"type": "boolean"
								},
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"Artificer",
											"Bard",
											"Cleric",
											"Druid",
											"Paladin",
											"Ranger",
											"Sorcerer",
											"Warlock",
											"Wizard"
										]
									}
								}
							],
							"markdownDescription": "Item can be used as a spellcasting focus"
						},
						"lootTables": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"critThreshold": {
							"type": "integer"
						},
						"bonusAc": {
							"type": "string"
						},
						"bonusWeapon": {
							"type": "string"
						},
						"bonusWeaponAttack": {
							"type": "string"
						},
						"bonusWeaponDamage": {
							"type": "string"
						},
						"bonusWeaponCritDamage": {
							"type": "string"
						},
						"bonusSpellAttack": {
							"type": "string"
						},
						"bonusSpellDamage": {
							"type": "string"
						},
						"bonusSpellSaveDc": {
							"type": "string"
						},
						"bonusSavingThrow": {
							"type": "string"
						},
						"bonusAbilityCheck": {
							"type": "string"
						},
						"bonusProficiencyBonus": {
							"type": "string"
						},
						"bonusSavingThrowConcentration": {
							"type": "string"
						},
						"modifySpeed": {
							"$ref": "items-shared.json#/$defs/itemModifySpeed"
						},
						"otherSources": {
							"$ref": "util.json#/$defs/otherSources"
						},
						"legacy": {
							"$ref": "util.json#/$defs/legacy"
						},
						"atomicPackContents": {
							"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
							"type": "boolean",
							"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
						},
						"containerCapacity": {
							"type": "object",
							"properties": {
								"weight": {
									"description": "Value in pounds.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in pounds."
								},
								"volume": {
									"description": "Value in cubic feet.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in cubic feet."
								},
								"item": {
									"type": "array",
									"items": {
										"type": "object",
										"patternProperties": {
											".*": {
												"type": "integer"
											}
										},
										"additionalProperties": false
									}
								},
								"weightless": {
									"description": "If the container renders its contents weightless.",
									"type": "boolean",
									"markdownDescription": "If the container renders its contents weightless."
								}
							},
							"additionalProperties": false
						},
						"ammoType": {
							"$ref": "items-shared.json#/$defs/itemAmmoType"
						},
						"packContents": {
							"$ref": "items-shared.json#/$defs/packContents"
						},
						"grantsProficiency": {
							"type": "boolean"
						},
						"grantsLanguage": {
							"type": "boolean"
						},
						"spellScrollLevel": {
							"type": "integer"
						},
						"seeAlsoDeck": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
								"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
							}
						},
						"seeAlsoVehicle": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
								"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
							}
						},
						"reqAttuneTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"reqAttuneAltTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"miscTags": {
							"$ref": "items-shared.json#/$defs/itemMiscTags"
						},
						"mastery": {
							"$ref": "items-shared.json#/$defs/itemMastery"
						},
						"reach": {
							"$ref": "items-shared.json#/$defs/itemReach"
						},
						"light": {
							"$ref": "items-shared.json#/$defs/itemLight"
						},
						"barDimensions": {
							"type": "object",
							"description": "Values given in inches.",
							"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
							"properties": {
								"l": {
									"type": "number"
								},
								"w": {
									"type": "number"
								},
								"h": {
									"type": "number"
								}
							},
							"required": [
								"l",
								"w",
								"h"
							],
							"additionalProperties": false,
							"markdownDescription": "Values given in inches."
						},
						"hasFluff": {
							"type": "boolean"
						},
						"hasFluffImages": {
							"type": "boolean"
						},
						"hasRefs": {
							"type": "boolean",
							"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
							"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
						},
						"srd": {
							"$ref": "util.json#/$defs/srd"
						},
						"srd52": {
							"$ref": "util.json#/$defs/srd"
						},
						"basicRules": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"basicRules2024": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"_copy": {
							"$ref": "util-copy.json#/$defs/copyBlock_copy_generic"
						}
					},
					"additionalProperties": false,
					"required": [
						"_copy"
					]
				}
			]
		},
		"subEntityItem": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"alias": {
					"$ref": "util.json#/$defs/alias"
				},
				"group": {
					"$ref": "util.json#/$defs/group"
				},
				"type": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"typeAlt": {
					"$ref": "items-shared.json#/$defs/itemType"
				},
				"rarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"source": {
					"$ref": "util.json#/$defs/source"
				},
				"page": {
					"$ref": "util.json#/$defs/page"
				},
				"additionalSources": {
					"$ref": "util.json#/$defs/additionalSources"
				},
				"reprintedAs": {
					"$ref": "util.json#/$defs/reprintedAs"
				},
				"baseItem": {
					"type": "string"
				},
				"ac": {
					"type": "integer"
				},
				"age": {
					"$ref": "items-shared.json#/$defs/itemAge"
				},
				"carryingCapacity": {
					"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
				},
				"dmg1": {
					"type": "string"
				},
				"dmg2": {
					"type": "string",
					"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
					"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
				},
				"dmgType": {
					"$ref": "util.json#/$defs/dataDamageTags"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"additionalEntries": {
					"type": "array",
					"items": {
						"$ref": "entry.json"
					}
				},
				"property": {
					"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
				},
				"range": {
					"type": "string"
				},
				"reload": {
					"type": [
						"string",
						"integer"
					]
				},
				"reqAttune": {
					"type": [
						"string",
						"boolean"
					]
				},
				"reqAttuneAlt": {
					"description": "Used for filtering.",
					"type": [
						"string",
						"boolean"
					],
					"markdownDescription": "Used for filtering."
				},
				"curse": {
					"type": "boolean"
				},
				"vulnerable": {
					"$ref": "util.json#/$defs/damageVulnerabilityArray"
				},
				"resist": {
					"$ref": "util.json#/$defs/damageResistArray"
				},
				"immune": {
					"$ref": "util.json#/$defs/damageImmunityArray"
				},
				"conditionImmune": {
					"$ref": "util.json#/$defs/conditionImmunityArray"
				},
				"detail1": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"detail2": {
					"description": "A descriptive field that can be used to complete entries in variants.",
					"type": "string",
					"markdownDescription": "A descriptive field that can be used to complete entries in variants."
				},
				"scfType": {
					"$ref": "items-shared.json#/$defs/itemScfType"
				},
				"speed": {
					"$ref": "items-shared.json#/$defs/itemSpeed"
				},
				"stealth": {
					"type": "boolean"
				},
				"strength": {
					"type": [
						"string",
						"null"
					]
				},
				"dexterityMax": {
					"$ref": "items-shared.json#/$defs/itemDexterityMax"
				},
				"firearm": {
					"type": "boolean"
				},
				"staff": {
					"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
					"type": "boolean",
					"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
				},
				"tier": {
					"$ref": "items-shared.json#/$defs/itemTier"
				},
				"value": {
					"description": "In copper pieces.",
					"type": [
						"number",
						"null"
					],
					"markdownDescription": "In copper pieces."
				},
				"valueMult": {
					"type": "number"
				},
				"valueRarity": {
					"$ref": "items-shared.json#/$defs/itemRarity"
				},
				"weaponCategory": {
					"$ref": "items-shared.json#/$defs/itemWeaponCategory"
				},
				"weight": {
					"type": "number"
				},
				"weightMult": {
					"type": "number"
				},
				"weightNote": {
					"type": "string"
				},
				"wondrous": {
					"type": "boolean"
				},
				"tattoo": {
					"type": "boolean"
				},
				"sentient": {
					"type": "boolean"
				},
				"poison": {
					"type": "boolean"
				},
				"poisonTypes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"contact",
							"ingested",
							"injury",
							"inhaled"
						]
					}
				},
				"crew": {
					"type": "integer"
				},
				"crewMin": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"crewMax": {
					"description": "For crews specified as an X-Y min-max.",
					"type": "integer",
					"markdownDescription": "For crews specified as an X-Y min-max."
				},
				"capPassenger": {
					"type": "integer"
				},
				"capCargo": {
					"type": "number"
				},
				"vehSpeed": {
					"type": "number"
				},
				"vehAc": {
					"type": "integer"
				},
				"vehHp": {
					"type": "integer"
				},
				"vehDmgThresh": {
					"type": "integer"
				},
				"travelCost": {
					"description": "In copper pieces per mile per passenger.",
					"type": "integer",
					"markdownDescription": "In copper pieces per mile per passenger."
				},
				"shippingCost": {
					"description": "In copper pieces per 100 lbs per mile.",
					"type": "integer",
					"markdownDescription": "In copper pieces per 100 lbs per mile."
				},
				"charges": {
					"type": [
						"string",
						"integer"
					]
				},
				"recharge": {
					"$ref": "items-shared.json#/$defs/itemRecharge"
				},
				"rechargeAmount": {
					"$ref": "items-shared.json#/$defs/itemRechargeAmount"
				},
				"optionalfeatures": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"attachedSpells": {
					"$ref": "items-shared.json#/$defs/itemAttachedSpells"
				},
				"ability": {
					"$ref": "items-shared.json#/$defs/itemAbility"
				},
				"focus": {
					"description": "Item can be used as a spellcasting focus",
					"oneOf": [
						{
							"type": "boolean"
						},
						{
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"Artificer",
									"Bard",
									"Cleric",
									"Druid",
									"Paladin",
									"Ranger",
									"Sorcerer",
									"Warlock",
									"Wizard"
								]
							}
						}
					],
					"markdownDescription": "Item can be used as a spellcasting focus"
				},
				"lootTables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"critThreshold": {
					"type": "integer"
				},
				"bonusAc": {
					"type": "string"
				},
				"bonusWeapon": {
					"type": "string"
				},
				"bonusWeaponAttack": {
					"type": "string"
				},
				"bonusWeaponDamage": {
					"type": "string"
				},
				"bonusWeaponCritDamage": {
					"type": "string"
				},
				"bonusSpellAttack": {
					"type": "string"
				},
				"bonusSpellDamage": {
					"type": "string"
				},
				"bonusSpellSaveDc": {
					"type": "string"
				},
				"bonusSavingThrow": {
					"type": "string"
				},
				"bonusAbilityCheck": {
					"type": "string"
				},
				"bonusProficiencyBonus": {
					"type": "string"
				},
				"bonusSavingThrowConcentration": {
					"type": "string"
				},
				"modifySpeed": {
					"$ref": "items-shared.json#/$defs/itemModifySpeed"
				},
				"otherSources": {
					"$ref": "util.json#/$defs/otherSources"
				},
				"legacy": {
					"$ref": "util.json#/$defs/legacy"
				},
				"atomicPackContents": {
					"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
					"type": "boolean",
					"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
				},
				"containerCapacity": {
					"type": "object",
					"properties": {
						"weight": {
							"description": "Value in pounds.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in pounds."
						},
						"volume": {
							"description": "Value in cubic feet.",
							"type": "array",
							"items": {
								"type": "number"
							},
							"markdownDescription": "Value in cubic feet."
						},
						"item": {
							"type": "array",
							"items": {
								"type": "object",
								"patternProperties": {
									".*": {
										"type": "integer"
									}
								},
								"additionalProperties": false
							}
						},
						"weightless": {
							"description": "If the container renders its contents weightless.",
							"type": "boolean",
							"markdownDescription": "If the container renders its contents weightless."
						}
					},
					"additionalProperties": false
				},
				"ammoType": {
					"$ref": "items-shared.json#/$defs/itemAmmoType"
				},
				"packContents": {
					"$ref": "items-shared.json#/$defs/packContents"
				},
				"grantsProficiency": {
					"type": "boolean"
				},
				"grantsLanguage": {
					"type": "boolean"
				},
				"spellScrollLevel": {
					"type": "integer"
				},
				"seeAlsoDeck": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
						"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
					}
				},
				"seeAlsoVehicle": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
						"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
					}
				},
				"reqAttuneTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"reqAttuneAltTags": {
					"$ref": "util.json#/$defs/reqAttuneTags"
				},
				"miscTags": {
					"$ref": "items-shared.json#/$defs/itemMiscTags"
				},
				"mastery": {
					"$ref": "items-shared.json#/$defs/itemMastery"
				},
				"reach": {
					"$ref": "items-shared.json#/$defs/itemReach"
				},
				"light": {
					"$ref": "items-shared.json#/$defs/itemLight"
				},
				"barDimensions": {
					"type": "object",
					"description": "Values given in inches.",
					"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
					"properties": {
						"l": {
							"type": "number"
						},
						"w": {
							"type": "number"
						},
						"h": {
							"type": "number"
						}
					},
					"required": [
						"l",
						"w",
						"h"
					],
					"additionalProperties": false,
					"markdownDescription": "Values given in inches."
				},
				"hasFluff": {
					"type": "boolean"
				},
				"hasFluffImages": {
					"type": "boolean"
				},
				"hasRefs": {
					"type": "boolean",
					"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
					"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
				},
				"srd": {
					"$ref": "util.json#/$defs/srd"
				},
				"srd52": {
					"$ref": "util.json#/$defs/srd"
				},
				"basicRules": {
					"$ref": "util.json#/$defs/basicRules"
				},
				"basicRules2024": {
					"$ref": "util.json#/$defs/basicRules"
				},
				"foundrySystem": {
					"$ref": "util-foundry.json#/$defs/foundrySystemObject"
				},
				"foundryActivities": {
					"$ref": "util-foundry.json#/$defs/foundryActivitiesArray"
				}
			},
			"additionalProperties": false,
			"required": [
				"name",
				"rarity",
				"source"
			]
		},
		"subEntityItemArray": {
			"type": "array",
			"items": {
				"$ref": "#/$defs/subEntityItem"
			},
			"uniqueItems": true,
			"minItems": 1
		},
		"itemGroup": {
			"anyOf": [
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"alias": {
							"$ref": "util.json#/$defs/alias"
						},
						"group": {
							"$ref": "util.json#/$defs/group"
						},
						"type": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"typeAlt": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"rarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"source": {
							"$ref": "util.json#/$defs/source"
						},
						"page": {
							"$ref": "util.json#/$defs/page"
						},
						"additionalSources": {
							"$ref": "util.json#/$defs/additionalSources"
						},
						"reprintedAs": {
							"$ref": "util.json#/$defs/reprintedAs"
						},
						"baseItem": {
							"type": "string"
						},
						"ac": {
							"type": "integer"
						},
						"age": {
							"$ref": "items-shared.json#/$defs/itemAge"
						},
						"carryingCapacity": {
							"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
						},
						"dmg1": {
							"type": "string"
						},
						"dmg2": {
							"type": "string",
							"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
							"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
						},
						"dmgType": {
							"$ref": "util.json#/$defs/dataDamageTags"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"additionalEntries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"property": {
							"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
						},
						"range": {
							"type": "string"
						},
						"reload": {
							"type": [
								"string",
								"integer"
							]
						},
						"reqAttune": {
							"type": [
								"string",
								"boolean"
							]
						},
						"reqAttuneAlt": {
							"description": "Used for filtering.",
							"type": [
								"string",
								"boolean"
							],
							"markdownDescription": "Used for filtering."
						},
						"curse": {
							"type": "boolean"
						},
						"vulnerable": {
							"$ref": "util.json#/$defs/damageVulnerabilityArray"
						},
						"resist": {
							"$ref": "util.json#/$defs/damageResistArray"
						},
						"immune": {
							"$ref": "util.json#/$defs/damageImmunityArray"
						},
						"conditionImmune": {
							"$ref": "util.json#/$defs/conditionImmunityArray"
						},
						"detail1": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"detail2": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"scfType": {
							"$ref": "items-shared.json#/$defs/itemScfType"
						},
						"speed": {
							"$ref": "items-shared.json#/$defs/itemSpeed"
						},
						"stealth": {
							"type": "boolean"
						},
						"strength": {
							"type": [
								"string",
								"null"
							]
						},
						"dexterityMax": {
							"$ref": "items-shared.json#/$defs/itemDexterityMax"
						},
						"firearm": {
							"type": "boolean"
						},
						"staff": {
							"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
							"type": "boolean",
							"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
						},
						"tier": {
							"$ref": "items-shared.json#/$defs/itemTier"
						},
						"value": {
							"description": "In copper pieces.",
							"type": [
								"number",
								"null"
							],
							"markdownDescription": "In copper pieces."
						},
						"valueMult": {
							"type": "number"
						},
						"valueRarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"weaponCategory": {
							"$ref": "items-shared.json#/$defs/itemWeaponCategory"
						},
						"weight": {
							"type": "number"
						},
						"weightMult": {
							"type": "number"
						},
						"weightNote": {
							"type": "string"
						},
						"wondrous": {
							"type": "boolean"
						},
						"tattoo": {
							"type": "boolean"
						},
						"sentient": {
							"type": "boolean"
						},
						"poison": {
							"type": "boolean"
						},
						"poisonTypes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"contact",
									"ingested",
									"injury",
									"inhaled"
								]
							}
						},
						"crew": {
							"type": "integer"
						},
						"crewMin": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"crewMax": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"capPassenger": {
							"type": "integer"
						},
						"capCargo": {
							"type": "number"
						},
						"vehSpeed": {
							"type": "number"
						},
						"vehAc": {
							"type": "integer"
						},
						"vehHp": {
							"type": "integer"
						},
						"vehDmgThresh": {
							"type": "integer"
						},
						"travelCost": {
							"description": "In copper pieces per mile per passenger.",
							"type": "integer",
							"markdownDescription": "In copper pieces per mile per passenger."
						},
						"shippingCost": {
							"description": "In copper pieces per 100 lbs per mile.",
							"type": "integer",
							"markdownDescription": "In copper pieces per 100 lbs per mile."
						},
						"charges": {
							"type": [
								"string",
								"integer"
							]
						},
						"recharge": {
							"$ref": "items-shared.json#/$defs/itemRecharge"
						},
						"rechargeAmount": {
							"$ref": "items-shared.json#/$defs/itemRechargeAmount"
						},
						"optionalfeatures": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"attachedSpells": {
							"$ref": "items-shared.json#/$defs/itemAttachedSpells"
						},
						"ability": {
							"$ref": "items-shared.json#/$defs/itemAbility"
						},
						"focus": {
							"description": "Item can be used as a spellcasting focus",
							"oneOf": [
								{
									"type": "boolean"
								},
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"Artificer",
											"Bard",
											"Cleric",
											"Druid",
											"Paladin",
											"Ranger",
											"Sorcerer",
											"Warlock",
											"Wizard"
										]
									}
								}
							],
							"markdownDescription": "Item can be used as a spellcasting focus"
						},
						"lootTables": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"critThreshold": {
							"type": "integer"
						},
						"bonusAc": {
							"type": "string"
						},
						"bonusWeapon": {
							"type": "string"
						},
						"bonusWeaponAttack": {
							"type": "string"
						},
						"bonusWeaponDamage": {
							"type": "string"
						},
						"bonusWeaponCritDamage": {
							"type": "string"
						},
						"bonusSpellAttack": {
							"type": "string"
						},
						"bonusSpellDamage": {
							"type": "string"
						},
						"bonusSpellSaveDc": {
							"type": "string"
						},
						"bonusSavingThrow": {
							"type": "string"
						},
						"bonusAbilityCheck": {
							"type": "string"
						},
						"bonusProficiencyBonus": {
							"type": "string"
						},
						"bonusSavingThrowConcentration": {
							"type": "string"
						},
						"modifySpeed": {
							"$ref": "items-shared.json#/$defs/itemModifySpeed"
						},
						"otherSources": {
							"$ref": "util.json#/$defs/otherSources"
						},
						"legacy": {
							"$ref": "util.json#/$defs/legacy"
						},
						"atomicPackContents": {
							"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
							"type": "boolean",
							"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
						},
						"containerCapacity": {
							"type": "object",
							"properties": {
								"weight": {
									"description": "Value in pounds.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in pounds."
								},
								"volume": {
									"description": "Value in cubic feet.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in cubic feet."
								},
								"item": {
									"type": "array",
									"items": {
										"type": "object",
										"patternProperties": {
											".*": {
												"type": "integer"
											}
										},
										"additionalProperties": false
									}
								},
								"weightless": {
									"description": "If the container renders its contents weightless.",
									"type": "boolean",
									"markdownDescription": "If the container renders its contents weightless."
								}
							},
							"additionalProperties": false
						},
						"ammoType": {
							"$ref": "items-shared.json#/$defs/itemAmmoType"
						},
						"packContents": {
							"$ref": "items-shared.json#/$defs/packContents"
						},
						"grantsProficiency": {
							"type": "boolean"
						},
						"grantsLanguage": {
							"type": "boolean"
						},
						"spellScrollLevel": {
							"type": "integer"
						},
						"seeAlsoDeck": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
								"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
							}
						},
						"seeAlsoVehicle": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
								"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
							}
						},
						"reqAttuneTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"reqAttuneAltTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"miscTags": {
							"$ref": "items-shared.json#/$defs/itemMiscTags"
						},
						"mastery": {
							"$ref": "items-shared.json#/$defs/itemMastery"
						},
						"reach": {
							"$ref": "items-shared.json#/$defs/itemReach"
						},
						"light": {
							"$ref": "items-shared.json#/$defs/itemLight"
						},
						"barDimensions": {
							"type": "object",
							"description": "Values given in inches.",
							"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
							"properties": {
								"l": {
									"type": "number"
								},
								"w": {
									"type": "number"
								},
								"h": {
									"type": "number"
								}
							},
							"required": [
								"l",
								"w",
								"h"
							],
							"additionalProperties": false,
							"markdownDescription": "Values given in inches."
						},
						"hasFluff": {
							"type": "boolean"
						},
						"hasFluffImages": {
							"type": "boolean"
						},
						"hasRefs": {
							"type": "boolean",
							"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
							"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
						},
						"srd": {
							"$ref": "util.json#/$defs/srd"
						},
						"srd52": {
							"$ref": "util.json#/$defs/srd"
						},
						"basicRules": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"basicRules2024": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"items": {
							"$ref": "#/$defs/_itemGroupItems"
						},
						"itemsHidden": {
							"const": true
						}
					},
					"additionalProperties": false,
					"required": [
						"name",
						"rarity",
						"source",
						"items"
					]
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"alias": {
							"$ref": "util.json#/$defs/alias"
						},
						"group": {
							"$ref": "util.json#/$defs/group"
						},
						"type": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"typeAlt": {
							"$ref": "items-shared.json#/$defs/itemType"
						},
						"rarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"source": {
							"$ref": "util.json#/$defs/source"
						},
						"page": {
							"$ref": "util.json#/$defs/page"
						},
						"additionalSources": {
							"$ref": "util.json#/$defs/additionalSources"
						},
						"reprintedAs": {
							"$ref": "util.json#/$defs/reprintedAs"
						},
						"baseItem": {
							"type": "string"
						},
						"ac": {
							"type": "integer"
						},
						"age": {
							"$ref": "items-shared.json#/$defs/itemAge"
						},
						"carryingCapacity": {
							"$ref": "items-shared.json#/$defs/itemCarryingCapacity"
						},
						"dmg1": {
							"type": "string"
						},
						"dmg2": {
							"type": "string",
							"description": "The versatile or alternative damage dice of the weapon, e.g. \"1d10\"",
							"markdownDescription": "The versatile or alternative damage dice of the weapon, e.g. &quot;1d10&quot;"
						},
						"dmgType": {
							"$ref": "util.json#/$defs/dataDamageTags"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"additionalEntries": {
							"type": "array",
							"items": {
								"$ref": "entry.json"
							}
						},
						"property": {
							"$ref": "items-shared.json#/$defs/itemPropertyOrWrapperArray"
						},
						"range": {
							"type": "string"
						},
						"reload": {
							"type": [
								"string",
								"integer"
							]
						},
						"reqAttune": {
							"type": [
								"string",
								"boolean"
							]
						},
						"reqAttuneAlt": {
							"description": "Used for filtering.",
							"type": [
								"string",
								"boolean"
							],
							"markdownDescription": "Used for filtering."
						},
						"curse": {
							"type": "boolean"
						},
						"vulnerable": {
							"$ref": "util.json#/$defs/damageVulnerabilityArray"
						},
						"resist": {
							"$ref": "util.json#/$defs/damageResistArray"
						},
						"immune": {
							"$ref": "util.json#/$defs/damageImmunityArray"
						},
						"conditionImmune": {
							"$ref": "util.json#/$defs/conditionImmunityArray"
						},
						"detail1": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"detail2": {
							"description": "A descriptive field that can be used to complete entries in variants.",
							"type": "string",
							"markdownDescription": "A descriptive field that can be used to complete entries in variants."
						},
						"scfType": {
							"$ref": "items-shared.json#/$defs/itemScfType"
						},
						"speed": {
							"$ref": "items-shared.json#/$defs/itemSpeed"
						},
						"stealth": {
							"type": "boolean"
						},
						"strength": {
							"type": [
								"string",
								"null"
							]
						},
						"dexterityMax": {
							"$ref": "items-shared.json#/$defs/itemDexterityMax"
						},
						"firearm": {
							"type": "boolean"
						},
						"staff": {
							"description": "Adds the italicized \"Staff\" text to the item info line (below the name).",
							"type": "boolean",
							"markdownDescription": "Adds the italicized &quot;Staff&quot; text to the item info line (below the name)."
						},
						"tier": {
							"$ref": "items-shared.json#/$defs/itemTier"
						},
						"value": {
							"description": "In copper pieces.",
							"type": [
								"number",
								"null"
							],
							"markdownDescription": "In copper pieces."
						},
						"valueMult": {
							"type": "number"
						},
						"valueRarity": {
							"$ref": "items-shared.json#/$defs/itemRarity"
						},
						"weaponCategory": {
							"$ref": "items-shared.json#/$defs/itemWeaponCategory"
						},
						"weight": {
							"type": "number"
						},
						"weightMult": {
							"type": "number"
						},
						"weightNote": {
							"type": "string"
						},
						"wondrous": {
							"type": "boolean"
						},
						"tattoo": {
							"type": "boolean"
						},
						"sentient": {
							"type": "boolean"
						},
						"poison": {
							"type": "boolean"
						},
						"poisonTypes": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"contact",
									"ingested",
									"injury",
									"inhaled"
								]
							}
						},
						"crew": {
							"type": "integer"
						},
						"crewMin": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"crewMax": {
							"description": "For crews specified as an X-Y min-max.",
							"type": "integer",
							"markdownDescription": "For crews specified as an X-Y min-max."
						},
						"capPassenger": {
							"type": "integer"
						},
						"capCargo": {
							"type": "number"
						},
						"vehSpeed": {
							"type": "number"
						},
						"vehAc": {
							"type": "integer"
						},
						"vehHp": {
							"type": "integer"
						},
						"vehDmgThresh": {
							"type": "integer"
						},
						"travelCost": {
							"description": "In copper pieces per mile per passenger.",
							"type": "integer",
							"markdownDescription": "In copper pieces per mile per passenger."
						},
						"shippingCost": {
							"description": "In copper pieces per 100 lbs per mile.",
							"type": "integer",
							"markdownDescription": "In copper pieces per 100 lbs per mile."
						},
						"charges": {
							"type": [
								"string",
								"integer"
							]
						},
						"recharge": {
							"$ref": "items-shared.json#/$defs/itemRecharge"
						},
						"rechargeAmount": {
							"$ref": "items-shared.json#/$defs/itemRechargeAmount"
						},
						"optionalfeatures": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"attachedSpells": {
							"$ref": "items-shared.json#/$defs/itemAttachedSpells"
						},
						"ability": {
							"$ref": "items-shared.json#/$defs/itemAbility"
						},
						"focus": {
							"description": "Item can be used as a spellcasting focus",
							"oneOf": [
								{
									"type": "boolean"
								},
								{
									"type": "array",
									"items": {
										"type": "string",
										"enum": [
											"Artificer",
											"Bard",
											"Cleric",
											"Druid",
											"Paladin",
											"Ranger",
											"Sorcerer",
											"Warlock",
											"Wizard"
										]
									}
								}
							],
							"markdownDescription": "Item can be used as a spellcasting focus"
						},
						"lootTables": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"critThreshold": {
							"type": "integer"
						},
						"bonusAc": {
							"type": "string"
						},
						"bonusWeapon": {
							"type": "string"
						},
						"bonusWeaponAttack": {
							"type": "string"
						},
						"bonusWeaponDamage": {
							"type": "string"
						},
						"bonusWeaponCritDamage": {
							"type": "string"
						},
						"bonusSpellAttack": {
							"type": "string"
						},
						"bonusSpellDamage": {
							"type": "string"
						},
						"bonusSpellSaveDc": {
							"type": "string"
						},
						"bonusSavingThrow": {
							"type": "string"
						},
						"bonusAbilityCheck": {
							"type": "string"
						},
						"bonusProficiencyBonus": {
							"type": "string"
						},
						"bonusSavingThrowConcentration": {
							"type": "string"
						},
						"modifySpeed": {
							"$ref": "items-shared.json#/$defs/itemModifySpeed"
						},
						"otherSources": {
							"$ref": "util.json#/$defs/otherSources"
						},
						"legacy": {
							"$ref": "util.json#/$defs/legacy"
						},
						"atomicPackContents": {
							"description": "If the item's pack contents should be treated as one atomic unit, rather than handled as individual sub-items.",
							"type": "boolean",
							"markdownDescription": "If the item&apos;s pack contents should be treated as one atomic unit, rather than handled as individual sub-items."
						},
						"containerCapacity": {
							"type": "object",
							"properties": {
								"weight": {
									"description": "Value in pounds.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in pounds."
								},
								"volume": {
									"description": "Value in cubic feet.",
									"type": "array",
									"items": {
										"type": "number"
									},
									"markdownDescription": "Value in cubic feet."
								},
								"item": {
									"type": "array",
									"items": {
										"type": "object",
										"patternProperties": {
											".*": {
												"type": "integer"
											}
										},
										"additionalProperties": false
									}
								},
								"weightless": {
									"description": "If the container renders its contents weightless.",
									"type": "boolean",
									"markdownDescription": "If the container renders its contents weightless."
								}
							},
							"additionalProperties": false
						},
						"ammoType": {
							"$ref": "items-shared.json#/$defs/itemAmmoType"
						},
						"packContents": {
							"$ref": "items-shared.json#/$defs/packContents"
						},
						"grantsProficiency": {
							"type": "boolean"
						},
						"grantsLanguage": {
							"type": "boolean"
						},
						"spellScrollLevel": {
							"type": "integer"
						},
						"seeAlsoDeck": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"deck\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"deck of many things|dmg\".",
								"markdownDescription": "UIDs of &quot;deck&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;deck of many things|dmg&quot;."
							}
						},
						"seeAlsoVehicle": {
							"type": "array",
							"items": {
								"type": "string",
								"description": "UIDs of \"vehicle\"s to be linked in a \"See Also\" footnote.\n\nEx.: \"rowboat|gos\".",
								"markdownDescription": "UIDs of &quot;vehicle&quot;s to be linked in a &quot;See Also&quot; footnote.\n\nEx.: &quot;rowboat|gos&quot;."
							}
						},
						"reqAttuneTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"reqAttuneAltTags": {
							"$ref": "util.json#/$defs/reqAttuneTags"
						},
						"miscTags": {
							"$ref": "items-shared.json#/$defs/itemMiscTags"
						},
						"mastery": {
							"$ref": "items-shared.json#/$defs/itemMastery"
						},
						"reach": {
							"$ref": "items-shared.json#/$defs/itemReach"
						},
						"light": {
							"$ref": "items-shared.json#/$defs/itemLight"
						},
						"barDimensions": {
							"type": "object",
							"description": "Values given in inches.",
							"$comment": "Not to be confused with the \"barDimension\", an altogether friendlier place.",
							"properties": {
								"l": {
									"type": "number"
								},
								"w": {
									"type": "number"
								},
								"h": {
									"type": "number"
								}
							},
							"required": [
								"l",
								"w",
								"h"
							],
							"additionalProperties": false,
							"markdownDescription": "Values given in inches."
						},
						"hasFluff": {
							"type": "boolean"
						},
						"hasFluffImages": {
							"type": "boolean"
						},
						"hasRefs": {
							"type": "boolean",
							"description": "Whether this item has references within its data to dedicated \"itemEntry\"s.",
							"markdownDescription": "Whether this item has references within its data to dedicated &quot;itemEntry&quot;s."
						},
						"srd": {
							"$ref": "util.json#/$defs/srd"
						},
						"srd52": {
							"$ref": "util.json#/$defs/srd"
						},
						"basicRules": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"basicRules2024": {
							"$ref": "util.json#/$defs/basicRules"
						},
						"items": {
							"$ref": "#/$defs/_itemGroupItems"
						},
						"_copy": {
							"$ref": "util-copy.json#/$defs/copyBlock_copy_generic"
						}
					},
					"additionalProperties": false,
					"required": [
						"_copy"
					]
				}
			]
		}
	},
	"properties": {
		"item": {
			"type": "array",
			"items": {
				"$ref": "#/$defs/item"
			},
			"uniqueItems": true,
			"minItems": 1
		},
		"itemGroup": {
			"description": "Used to create fake item entries for groups of related items, often referred to as a single item (e.g. arcane foci)",
			"type": "array",
			"items": {
				"$ref": "#/$defs/itemGroup"
			},
			"uniqueItems": true,
			"minItems": 1,
			"markdownDescription": "Used to create fake item entries for groups of related items, often referred to as a single item (e.g. arcane foci)"
		},
		"_meta": {
			"$ref": "util.json#/$defs/metaBlock"
		}
	},
	"additionalProperties": false
}